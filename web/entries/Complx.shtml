<!DOCTYPE public "-//w3c//dtd html 4.01 transitional//en"
		"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <title>Archive of Formal Proofs</title>
  <link rel="stylesheet" type="text/css" href="../front.css">
  <script src="../jquery.min.js"></script>
  <script src="../script.js"></script>
  <link rel="icon" href="../images/favicon.ico" type="image/icon">
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
</head>
<body>

<table width="100%">
  <tbody>
    <tr>
      <td width="20%" align="center" valign="top">
      <!-- navigation -->
      <!--#include file="nav.html"-->
      </td>
      <td width="80%" valign="top">
      <!-- content -->

<div align="center">
<p>&nbsp;</p>

<h1><font class="first">C</font>OMPLX:
<font class="first">A</font>
<font class="first">V</font>erification
<font class="first">F</font>ramework
for
<font class="first">C</font>oncurrent
<font class="first">I</font>mperative
<font class="first">P</font>rograms
</h1>
<p></p>
<table width="80%" class="data">
  <tbody>
    <tr><td class="datahead" width="20%">Title:</td>
        <td class="data" width="80%">COMPLX: A Verification Framework for Concurrent Imperative Programs</td></tr>

    <tr><td class="datahead">Author:</td>
        <td class="data">Sidney Amani, June Andronick, Maksym Bortin, Corey Lewis, Christine Rizkallah and Joseph Tuong</td></tr>

    <tr><td class="datahead">Submission date:</td>
        <td class="data">2016-11-29</td></tr>

    <tr><td class="datahead" valign="top">Abstract:</td>
        <td class="abstract">


We propose a concurrency reasoning framework for imperative programs,
based on the Owicki-Gries (OG) foundational shared-variable
concurrency method. Our framework combines the approaches of
Hoare-Parallel, a formalisation of OG in Isabelle/HOL for a simple
while-language, and Simpl, a generic imperative language embedded in
Isabelle/HOL, allowing formal reasoning on C programs. We define the
Complx language, extending the syntax and semantics of Simpl with
support for parallel composition and synchronisation. We additionally
define an OG logic, which we prove sound w.r.t. the  semantics, and a
verification condition generator, both supporting involved low-level
imperative constructs such as function calls and abrupt termination.
We illustrate our framework on an example that features exceptions,
guards and function calls.  We aim to then target concurrent operating
systems, such as the interruptible eChronos embedded operating system
for which we already have a model-level OG proof using Hoare-Parallel.
        </td></tr>

    <tr><td class="datahead" valign="top">BibTeX:</td>
        <td class="formatted">
			<pre>@article{Complx-AFP,
  author  = {Sidney Amani and June Andronick and Maksym Bortin and Corey Lewis and Christine Rizkallah and Joseph Tuong},
  title   = {COMPLX: A Verification Framework for Concurrent Imperative Programs},
  journal = {Archive of Formal Proofs},
  month   = nov,
  year    = 2016,
  note    = {\url{http://isa-afp.org/entries/Complx.shtml},
            Formal proof development},
  ISSN    = {2150-914x},
}</pre>
        </td></tr>

    <tr><td class="datahead">License:</td>
        <td class="data"><a href="http://isa-afp.org/LICENSE">BSD License</a></td></tr>


    <tr><td class="datahead">Depends on:</td>
        <td class="data"><a href="Word_Lib.shtml">Word_Lib</a></td></tr>



<!--#set var="status" value="-STATUS-" -->
<!--#set var="version" value="-VERSION-" -->
<!--#set var="afp-version" value="-AFPVERSION-" -->
<!---INCLUDE- file="devel-warning.shtml"-->

  </tbody>
</table>

<p></p>

<!--#set var="name" value="Complx" -->
<!--#set var="binfo" value="../browser_info/current/AFP/${name}" -->

<!--#set var="doc" value="${binfo}/document.pdf" -->
<!--#set var="outline" value="${binfo}/outline.pdf" -->
<!--#set var="browse" value="${binfo}/index.html" -->
<!--#set var="tar" value="../release/afp-${name}-current.tar.gz" -->

<table class="links">
  <tbody>
    <tr>
  <td class="links">
	<a href="<!--#echo var="outline" -->">Proof outline</a><br>
	<a href="<!--#echo var="doc" -->">Proof document</a>
  </td>
	<!-- link to README.hmtl if no document exists -->	
	</tr>
    <tr>
  <td class="links">
	<a href="<!--#echo var="browse" -->">Browse theories</a>
	</td></tr>
    <tr>
  <td class="links"> 
	<a href="<!--#echo var="tar" -->">Download this entry</a>
	</td>
  </tr>
    <tr><td class="links">Older releases:
None    </td></tr>
  </tbody>
</table>
<!-- entry data end -->

</td> </tr> </table>

</body>
</html>
