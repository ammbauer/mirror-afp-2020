<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://www.isa-afp.org/rss.xml" rel="self" type="application/rss+xml" />
    <title>Archive of Formal Proofs</title>
    <link>https://www.isa-afp.org</link>
    <description>
      The Archive of Formal Proofs is a collection of proof libraries, examples,
      and larger scientific developments, mechanically checked
      in the theorem prover Isabelle.
    </description>
    <pubDate>22 Oct 2018 00:00:00 +0000</pubDate>
    <item>
       <title>Smooth Manifolds</title>
              <link>https://www.isa-afp.org/entries/Smooth_Manifolds.html</link>
       <guid>https://www.isa-afp.org/entries/Smooth_Manifolds.html</guid>
       <dc:creator> Fabian Immler, Bohua Zhan       </dc:creator>
       <pubDate>22 Oct 2018 00:00:00 +0000</pubDate>
       <description>
We formalize the definition and basic properties of smooth manifolds
in Isabelle/HOL. Concepts covered include partition of unity, tangent
and cotangent spaces, and the fundamental theorem of path integrals.
We also examine some concrete manifolds such as spheres and projective
spaces. The formalization makes extensive use of the analysis and
linear algebra libraries in Isabelle/HOL, in particular its
“types-to-sets” mechanism.</description>
    </item>
    <item>
       <title>Randomised Binary Search Trees</title>
              <link>https://www.isa-afp.org/entries/Randomised_BSTs.html</link>
       <guid>https://www.isa-afp.org/entries/Randomised_BSTs.html</guid>
       <dc:creator> Manuel Eberl       </dc:creator>
       <pubDate>19 Oct 2018 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt;This work is a formalisation of the Randomised Binary Search
Trees introduced by Martínez and Roura, including definitions and
correctness proofs.&lt;/p&gt; &lt;p&gt;Like randomised treaps, they
are a probabilistic data structure that behaves exactly as if elements
were inserted into a non-balancing BST in random order. However,
unlike treaps, they only use discrete probability distributions, but
their use of randomness is more complicated.&lt;/p&gt;</description>
    </item>
    <item>
       <title>Formalization of the Embedding Path Order for Lambda-Free Higher-Order Terms</title>
              <link>https://www.isa-afp.org/entries/Lambda_Free_EPO.html</link>
       <guid>https://www.isa-afp.org/entries/Lambda_Free_EPO.html</guid>
       <dc:creator> Alexander Bentkamp       </dc:creator>
       <pubDate>19 Oct 2018 00:00:00 +0000</pubDate>
       <description>
This Isabelle/HOL formalization defines the Embedding Path Order (EPO)
for higher-order terms without lambda-abstraction and proves many
useful properties about it. In contrast to the lambda-free recursive
path orders, it does not fully coincide with RPO on first-order terms,
but it is compatible with arbitrary higher-order contexts.</description>
    </item>
    <item>
       <title>Upper Bounding Diameters of State Spaces of Factored Transition Systems</title>
              <link>https://www.isa-afp.org/entries/Factored_Transition_System_Bounding.html</link>
       <guid>https://www.isa-afp.org/entries/Factored_Transition_System_Bounding.html</guid>
       <dc:creator> Friedrich Kurz, Mohammad Abdulaziz       </dc:creator>
       <pubDate>12 Oct 2018 00:00:00 +0000</pubDate>
       <description>
A completeness threshold is required to guarantee the completeness of
planning as satisfiability, and bounded model checking of safety
properties. One valid completeness threshold is the diameter of the
underlying transition system. The diameter is the maximum element in
the set of lengths of all shortest paths between pairs of states. The
diameter is not calculated exactly in our setting, where the
transition system is succinctly described using a (propositionally)
factored representation. Rather, an upper bound on the diameter is
calculated compositionally, by bounding the diameters of small
abstract subsystems, and then composing those.  We port a HOL4
formalisation of a compositional algorithm for computing a relatively
tight upper bound on the system diameter. This compositional algorithm
exploits acyclicity in the state space to achieve compositionality,
and it was introduced by Abdulaziz et. al. The formalisation that we
port is described as a part of another paper by Abdulaziz et. al. As a
part of this porting we developed a libray about transition systems,
which shall be of use in future related mechanisation efforts.</description>
    </item>
    <item>
       <title>The Transcendence of π</title>
              <link>https://www.isa-afp.org/entries/Pi_Transcendental.html</link>
       <guid>https://www.isa-afp.org/entries/Pi_Transcendental.html</guid>
       <dc:creator> Manuel Eberl       </dc:creator>
       <pubDate>28 Sep 2018 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt;This entry shows the transcendence of &amp;pi; based on the
classic proof using the fundamental theorem of symmetric polynomials
first given by von Lindemann in 1882, but the formalisation mostly
follows the version by Niven. The proof reuses much of the machinery
developed in the AFP entry on the transcendence of
&lt;em&gt;e&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
       <title>Symmetric Polynomials</title>
              <link>https://www.isa-afp.org/entries/Symmetric_Polynomials.html</link>
       <guid>https://www.isa-afp.org/entries/Symmetric_Polynomials.html</guid>
       <dc:creator> Manuel Eberl       </dc:creator>
       <pubDate>25 Sep 2018 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt;A symmetric polynomial is a polynomial in variables
&lt;em&gt;X&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;,&amp;hellip;,&lt;em&gt;X&lt;/em&gt;&lt;sub&gt;n&lt;/sub&gt;
that does not discriminate between its variables, i.&amp;thinsp;e. it
is invariant under any permutation of them. These polynomials are
important in the study of the relationship between the coefficients of
a univariate polynomial and its roots in its algebraic
closure.&lt;/p&gt; &lt;p&gt;This article provides a definition of
symmetric polynomials and the elementary symmetric polynomials
e&lt;sub&gt;1&lt;/sub&gt;,&amp;hellip;,e&lt;sub&gt;n&lt;/sub&gt; and
proofs of their basic properties, including three notable
ones:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; Vieta&#39;s formula, which
gives an explicit expression for the &lt;em&gt;k&lt;/em&gt;-th
coefficient of a univariate monic polynomial in terms of its roots
&lt;em&gt;x&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;,&amp;hellip;,&lt;em&gt;x&lt;/em&gt;&lt;sub&gt;n&lt;/sub&gt;,
namely
&lt;em&gt;c&lt;/em&gt;&lt;sub&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt; = (-1)&lt;sup&gt;&lt;em&gt;n&lt;/em&gt;-&lt;em&gt;k&lt;/em&gt;&lt;/sup&gt;&amp;thinsp;e&lt;sub&gt;&lt;em&gt;n&lt;/em&gt;-&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt;(&lt;em&gt;x&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;,&amp;hellip;,&lt;em&gt;x&lt;/em&gt;&lt;sub&gt;n&lt;/sub&gt;).&lt;/li&gt;
&lt;li&gt;Second, the Fundamental Theorem of Symmetric Polynomials,
which states that any symmetric polynomial is itself a uniquely
determined polynomial combination of the elementary symmetric
polynomials.&lt;/li&gt; &lt;li&gt;Third, as a corollary of the
previous two, that given a polynomial over some ring
&lt;em&gt;R&lt;/em&gt;, any symmetric polynomial combination of its
roots is also in &lt;em&gt;R&lt;/em&gt; even when the roots are not.
&lt;/ul&gt; &lt;p&gt; Both the symmetry property itself and the
witness for the Fundamental Theorem are executable. &lt;/p&gt;</description>
    </item>
    <item>
       <title>Signature-Based Gröbner Basis Algorithms</title>
              <link>https://www.isa-afp.org/entries/Signature_Groebner.html</link>
       <guid>https://www.isa-afp.org/entries/Signature_Groebner.html</guid>
       <dc:creator> Alexander Maletzky       </dc:creator>
       <pubDate>20 Sep 2018 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt;This article formalizes signature-based algorithms for computing
Gr&amp;ouml;bner bases. Such algorithms are, in general, superior to
other algorithms in terms of efficiency, and have not been formalized
in any proof assistant so far. The present development is both
generic, in the sense that most known variants of signature-based
algorithms are covered by it, and effectively executable on concrete
input thanks to Isabelle&#39;s code generator. Sample computations of
benchmark problems show that the verified implementation of
signature-based algorithms indeed outperforms the existing
implementation of Buchberger&#39;s algorithm in Isabelle/HOL.&lt;/p&gt;
&lt;p&gt;Besides total correctness of the algorithms, the article also proves
that under certain conditions they a-priori detect and avoid all
useless zero-reductions, and always return &#39;minimal&#39; (in
some sense) Gr&amp;ouml;bner bases if an input parameter is chosen in
the right way.&lt;/p&gt;&lt;p&gt;The formalization follows the recent survey article by
Eder and Faug&amp;egrave;re.&lt;/p&gt;</description>
    </item>
    <item>
       <title>The Prime Number Theorem</title>
              <link>https://www.isa-afp.org/entries/Prime_Number_Theorem.html</link>
       <guid>https://www.isa-afp.org/entries/Prime_Number_Theorem.html</guid>
       <dc:creator> Manuel Eberl, Lawrence C. Paulson       </dc:creator>
       <pubDate>19 Sep 2018 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt;This article provides a short proof of the Prime Number
Theorem in several equivalent forms, most notably
&amp;pi;(&lt;em&gt;x&lt;/em&gt;) ~ &lt;em&gt;x&lt;/em&gt;/ln
&lt;em&gt;x&lt;/em&gt; where &amp;pi;(&lt;em&gt;x&lt;/em&gt;) is the
number of primes no larger than &lt;em&gt;x&lt;/em&gt;. It also
defines other basic number-theoretic functions related to primes like
Chebyshev&#39;s functions &amp;thetasym; and &amp;psi; and the
&amp;ldquo;&lt;em&gt;n&lt;/em&gt;-th prime number&amp;rdquo; function
p&lt;sub&gt;&lt;em&gt;n&lt;/em&gt;&lt;/sub&gt;. We also show various
bounds and relationship between these functions are shown. Lastly, we
derive Mertens&#39; First and Second Theorem, i.&amp;thinsp;e.
&amp;sum;&lt;sub&gt;&lt;em&gt;p&lt;/em&gt;&amp;le;&lt;em&gt;x&lt;/em&gt;&lt;/sub&gt;
ln &lt;em&gt;p&lt;/em&gt;/&lt;em&gt;p&lt;/em&gt; = ln
&lt;em&gt;x&lt;/em&gt; + &lt;em&gt;O&lt;/em&gt;(1) and
&amp;sum;&lt;sub&gt;&lt;em&gt;p&lt;/em&gt;&amp;le;&lt;em&gt;x&lt;/em&gt;&lt;/sub&gt;
1/&lt;em&gt;p&lt;/em&gt; = ln ln &lt;em&gt;x&lt;/em&gt; + M +
&lt;em&gt;O&lt;/em&gt;(1/ln &lt;em&gt;x&lt;/em&gt;). We also give
explicit bounds for the remainder terms.&lt;/p&gt; &lt;p&gt;The proof
of the Prime Number Theorem builds on a library of Dirichlet series
and analytic combinatorics. We essentially follow the presentation by
Newman. The core part of the proof is a Tauberian theorem for
Dirichlet series, which is proven using complex analysis and then used
to strengthen Mertens&#39; First Theorem to
&amp;sum;&lt;sub&gt;&lt;em&gt;p&lt;/em&gt;&amp;le;&lt;em&gt;x&lt;/em&gt;&lt;/sub&gt;
ln &lt;em&gt;p&lt;/em&gt;/&lt;em&gt;p&lt;/em&gt; = ln
&lt;em&gt;x&lt;/em&gt; + c + &lt;em&gt;o&lt;/em&gt;(1).&lt;/p&gt;
&lt;p&gt;A variant of this proof has been formalised before by
Harrison in HOL Light, and formalisations of Selberg&#39;s elementary
proof exist both by Avigad &lt;em&gt;et al.&lt;/em&gt; in Isabelle and
by Carneiro in Metamath. The advantage of the analytic proof is that,
while it requires more powerful mathematical tools, it is considerably
shorter and clearer. This article attempts to provide a short and
clear formalisation of all components of that proof using the full
range of mathematical machinery available in Isabelle, staying as
close as possible to Newman&#39;s simple paper proof.&lt;/p&gt;</description>
    </item>
    <item>
       <title>Aggregation Algebras</title>
              <link>https://www.isa-afp.org/entries/Aggregation_Algebras.html</link>
       <guid>https://www.isa-afp.org/entries/Aggregation_Algebras.html</guid>
       <dc:creator> Walter Guttmann       </dc:creator>
       <pubDate>15 Sep 2018 00:00:00 +0000</pubDate>
       <description>
We develop algebras for aggregation and minimisation for weight
matrices and for edge weights in graphs. We verify the correctness of
Prim&#39;s and Kruskal&#39;s minimum spanning tree algorithms based
on these algebras. We also show numerous instances of these algebras
based on linearly ordered commutative semigroups.</description>
    </item>
    <item>
       <title>Octonions</title>
              <link>https://www.isa-afp.org/entries/Octonions.html</link>
       <guid>https://www.isa-afp.org/entries/Octonions.html</guid>
       <dc:creator> Angeliki Koutsoukou-Argyraki       </dc:creator>
       <pubDate>14 Sep 2018 00:00:00 +0000</pubDate>
       <description>
We develop the basic theory of Octonions, including various identities
and properties of the octonions and of the octonionic product, a
description of 7D isometries and representations of orthogonal
transformations. To this end we first develop the theory of the vector
cross product in 7 dimensions. The development of the theory of
Octonions is inspired by that of the theory of Quaternions by Lawrence
Paulson. However, we do not work within the type class real_algebra_1
because the octonionic product is not associative.</description>
    </item>
    <item>
       <title>Quaternions</title>
              <link>https://www.isa-afp.org/entries/Quaternions.html</link>
       <guid>https://www.isa-afp.org/entries/Quaternions.html</guid>
       <dc:creator> Lawrence C. Paulson       </dc:creator>
       <pubDate>05 Sep 2018 00:00:00 +0000</pubDate>
       <description>
This theory is inspired by the HOL Light development of quaternions,
but follows its own route. Quaternions are developed coinductively, as
in the existing formalisation of the complex numbers. Quaternions are
quickly shown to belong to the type classes of real normed division
algebras and real inner product spaces. And therefore they inherit a
great body of facts involving algebraic  laws, limits, continuity,
etc., which must be proved explicitly in the HOL Light version.  The
development concludes with the geometric interpretation of the product
of imaginary quaternions.</description>
    </item>
    <item>
       <title>The Budan-Fourier Theorem and Counting Real Roots with Multiplicity</title>
              <link>https://www.isa-afp.org/entries/Budan_Fourier.html</link>
       <guid>https://www.isa-afp.org/entries/Budan_Fourier.html</guid>
       <dc:creator> Wenda Li       </dc:creator>
       <pubDate>02 Sep 2018 00:00:00 +0000</pubDate>
       <description>
This entry is mainly about counting and approximating real roots (of a
polynomial) with multiplicity. We have first formalised the
Budan-Fourier theorem: given a polynomial with real coefficients, we
can calculate sign variations on Fourier sequences to over-approximate
the number of real roots (counting multiplicity) within an interval.
When all roots are known to be real, the over-approximation becomes
tight: we can utilise this theorem to count real roots exactly. It is
also worth noting that Descartes&#39; rule of sign is a direct
consequence of the Budan-Fourier theorem, and has been included in
this entry. In addition, we have extended previous formalised
Sturm&#39;s theorem to count real roots with multiplicity, while the
original Sturm&#39;s theorem only counts distinct real roots.
Compared to the Budan-Fourier theorem, our extended Sturm&#39;s
theorem always counts roots exactly but may suffer from greater
computational cost.</description>
    </item>
    <item>
       <title>An Incremental Simplex Algorithm with Unsatisfiable Core Generation</title>
              <link>https://www.isa-afp.org/entries/Simplex.html</link>
       <guid>https://www.isa-afp.org/entries/Simplex.html</guid>
       <dc:creator> Filip Marić, Mirko Spasić, René Thiemann       </dc:creator>
       <pubDate>24 Aug 2018 00:00:00 +0000</pubDate>
       <description>
We present an Isabelle/HOL formalization and total correctness proof
for the incremental version of the Simplex algorithm which is used in
most state-of-the-art SMT solvers. It supports extraction of
satisfying assignments, extraction of unsatisfiable cores, incremental
assertion of constraints and backtracking. Formalization relies on
stepwise program refinement, starting from a simple specification,
going through a number of refinement steps, and ending up in a fully
executable functional implementation. Symmetries present in the
algorithm are handled with special care.</description>
    </item>
    <item>
       <title>Minsky Machines</title>
              <link>https://www.isa-afp.org/entries/Minsky_Machines.html</link>
       <guid>https://www.isa-afp.org/entries/Minsky_Machines.html</guid>
       <dc:creator> Bertram Felgenhauer       </dc:creator>
       <pubDate>14 Aug 2018 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt; We formalize undecidablity results for Minsky machines. To
this end, we also formalize recursive inseparability.
&lt;/p&gt;&lt;p&gt; We start by proving that Minsky machines can
compute arbitrary primitive recursive and recursive functions. We then
show that there is a deterministic Minsky machine with one argument
and two final states such that the set of inputs that are accepted in
one state is recursively inseparable from the set of inputs that are
accepted in the other state. &lt;/p&gt;&lt;p&gt; As a corollary, the
set of Minsky configurations that reach the first state but not the
second recursively inseparable from the set of Minsky configurations
that reach the second state but not the first. In particular both
these sets are undecidable. &lt;/p&gt;&lt;p&gt; We do
&lt;em&gt;not&lt;/em&gt; prove that recursive functions can simulate
Minsky machines. &lt;/p&gt;</description>
    </item>
    <item>
       <title>Pricing in discrete financial models</title>
              <link>https://www.isa-afp.org/entries/DiscretePricing.html</link>
       <guid>https://www.isa-afp.org/entries/DiscretePricing.html</guid>
       <dc:creator> Mnacho Echenim       </dc:creator>
       <pubDate>16 Jul 2018 00:00:00 +0000</pubDate>
       <description>
We have formalized the computation of fair prices for derivative
products in discrete financial models. As an application, we derive a
way to compute fair prices of derivative products in the
Cox-Ross-Rubinstein model of a financial market, thus completing the
work that was presented in this &lt;a
href=&#34;https://hal.archives-ouvertes.fr/hal-01562944&#34;&gt;paper&lt;/a&gt;.</description>
    </item>
    <item>
       <title>Von-Neumann-Morgenstern Utility Theorem</title>
              <link>https://www.isa-afp.org/entries/Neumann_Morgenstern_Utility.html</link>
       <guid>https://www.isa-afp.org/entries/Neumann_Morgenstern_Utility.html</guid>
       <dc:creator> Julian Parsert, Cezary Kaliszyk       </dc:creator>
       <pubDate>04 Jul 2018 00:00:00 +0000</pubDate>
       <description>
Utility functions form an essential part of game theory and economics.
In order to guarantee the existence of utility functions most of the
time sufficient properties are assumed in an axiomatic manner. One
famous and very common set of such assumptions is that of expected
utility theory. Here, the rationality, continuity, and independence of
preferences is assumed. The von-Neumann-Morgenstern Utility theorem
shows that these assumptions are necessary and sufficient for an
expected utility function to exists. This theorem was proven by
Neumann and Morgenstern in ``Theory of Games and Economic
Behavior&#39;&#39; which is regarded as one of the most influential
works in game theory. The formalization includes formal definitions of
the underlying concepts including continuity and independence of
preferences.</description>
    </item>
    <item>
       <title>Pell's Equation</title>
              <link>https://www.isa-afp.org/entries/Pell.html</link>
       <guid>https://www.isa-afp.org/entries/Pell.html</guid>
       <dc:creator> Manuel Eberl       </dc:creator>
       <pubDate>23 Jun 2018 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt; This article gives the basic theory of Pell&#39;s equation
&lt;em&gt;x&lt;/em&gt;&lt;sup&gt;2&lt;/sup&gt; = 1 +
&lt;em&gt;D&lt;/em&gt;&amp;thinsp;&lt;em&gt;y&lt;/em&gt;&lt;sup&gt;2&lt;/sup&gt;,
where
&lt;em&gt;D&lt;/em&gt;&amp;thinsp;&amp;isin;&amp;thinsp;&amp;#8469; is
a parameter and &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt; are
integer variables. &lt;/p&gt; &lt;p&gt; The main result that is proven
is the following: If &lt;em&gt;D&lt;/em&gt; is not a perfect square,
then there exists a &lt;em&gt;fundamental solution&lt;/em&gt;
(&lt;em&gt;x&lt;/em&gt;&lt;sub&gt;0&lt;/sub&gt;,
&lt;em&gt;y&lt;/em&gt;&lt;sub&gt;0&lt;/sub&gt;) that is not the
trivial solution (1, 0) and which generates all other solutions
(&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;) in the sense that
there exists some
&lt;em&gt;n&lt;/em&gt;&amp;thinsp;&amp;isin;&amp;thinsp;&amp;#8469;
such that |&lt;em&gt;x&lt;/em&gt;| +
|&lt;em&gt;y&lt;/em&gt;|&amp;thinsp;&amp;radic;&lt;span
style=&#34;text-decoration:
overline&#34;&gt;&lt;em&gt;D&lt;/em&gt;&lt;/span&gt; =
(&lt;em&gt;x&lt;/em&gt;&lt;sub&gt;0&lt;/sub&gt; +
&lt;em&gt;y&lt;/em&gt;&lt;sub&gt;0&lt;/sub&gt;&amp;thinsp;&amp;radic;&lt;span
style=&#34;text-decoration:
overline&#34;&gt;&lt;em&gt;D&lt;/em&gt;&lt;/span&gt;)&lt;sup&gt;&lt;em&gt;n&lt;/em&gt;&lt;/sup&gt;.
This also implies that the set of solutions is infinite, and it gives
us an explicit and executable characterisation of all the solutions.
&lt;/p&gt; &lt;p&gt; Based on this, simple executable algorithms for
computing the fundamental solution and the infinite sequence of all
non-negative solutions are also provided. &lt;/p&gt;</description>
    </item>
    <item>
       <title>Projective Geometry</title>
              <link>https://www.isa-afp.org/entries/Projective_Geometry.html</link>
       <guid>https://www.isa-afp.org/entries/Projective_Geometry.html</guid>
       <dc:creator> Anthony Bordg       </dc:creator>
       <pubDate>14 Jun 2018 00:00:00 +0000</pubDate>
       <description>
We formalize the basics of projective geometry. In particular, we give
a proof of the so-called Hessenberg&#39;s theorem in projective plane
geometry. We also provide a proof of the so-called Desargues&#39;s
theorem based on an axiomatization of (higher) projective space
geometry using the notion of rank of a matroid. This last approach
allows to handle incidence relations in an homogeneous way dealing
only with points and without the need of talking explicitly about
lines, planes or any higher entity.</description>
    </item>
    <item>
       <title>The Localization of a Commutative Ring</title>
              <link>https://www.isa-afp.org/entries/Localization_Ring.html</link>
       <guid>https://www.isa-afp.org/entries/Localization_Ring.html</guid>
       <dc:creator> Anthony Bordg       </dc:creator>
       <pubDate>14 Jun 2018 00:00:00 +0000</pubDate>
       <description>
We formalize the localization of a commutative ring R with respect to
a multiplicative subset (i.e. a submonoid of R seen as a
multiplicative monoid). This localization is itself a commutative ring
and we build the natural homomorphism of rings from R to its
localization.</description>
    </item>
    <item>
       <title>Partial Order Reduction</title>
              <link>https://www.isa-afp.org/entries/Partial_Order_Reduction.html</link>
       <guid>https://www.isa-afp.org/entries/Partial_Order_Reduction.html</guid>
       <dc:creator> Julian Brunner       </dc:creator>
       <pubDate>05 Jun 2018 00:00:00 +0000</pubDate>
       <description>
This entry provides a formalization of the abstract theory of ample
set partial order reduction. The formalization includes transition
systems with actions, trace theory, as well as basics on finite,
infinite, and lazy sequences. We also provide a basic framework for
static analysis on concurrent systems with respect to the ample set
condition.</description>
    </item>
    <item>
       <title>Optimal Binary Search Trees</title>
              <link>https://www.isa-afp.org/entries/Optimal_BST.html</link>
       <guid>https://www.isa-afp.org/entries/Optimal_BST.html</guid>
       <dc:creator> Tobias Nipkow, Dániel Somogyi       </dc:creator>
       <pubDate>27 May 2018 00:00:00 +0000</pubDate>
       <description>
This article formalizes recursive algorithms for the construction
of optimal binary search trees given fixed access frequencies.
We follow Knuth (1971), Yao (1980) and Mehlhorn (1984).
The algorithms are memoized with the help of the AFP article
&lt;a href=&#34;Monad_Memo_DP.html&#34;&gt;Monadification, Memoization and Dynamic Programming&lt;/a&gt;,
thus yielding dynamic programming algorithms.</description>
    </item>
    <item>
       <title>Hidden Markov Models</title>
              <link>https://www.isa-afp.org/entries/Hidden_Markov_Models.html</link>
       <guid>https://www.isa-afp.org/entries/Hidden_Markov_Models.html</guid>
       <dc:creator> Simon Wimmer       </dc:creator>
       <pubDate>25 May 2018 00:00:00 +0000</pubDate>
       <description>
This entry contains a formalization of hidden Markov models [3] based
on Johannes Hölzl&#39;s formalization of discrete time Markov chains
[1]. The basic definitions are provided and the correctness of two
main (dynamic programming) algorithms for hidden Markov models is
proved: the forward algorithm for computing the likelihood of an
observed sequence, and the Viterbi algorithm for decoding the most
probable hidden state sequence. The Viterbi algorithm is made
executable including memoization.  Hidden markov models have various
applications in natural language processing. For an introduction see
Jurafsky and Martin [2].</description>
    </item>
    <item>
       <title>Probabilistic Timed Automata</title>
              <link>https://www.isa-afp.org/entries/Probabilistic_Timed_Automata.html</link>
       <guid>https://www.isa-afp.org/entries/Probabilistic_Timed_Automata.html</guid>
       <dc:creator> Simon Wimmer, Johannes Hölzl       </dc:creator>
       <pubDate>24 May 2018 00:00:00 +0000</pubDate>
       <description>
We present a formalization of probabilistic timed automata (PTA) for
which we try to follow the formula MDP + TA = PTA as far as possible:
our work starts from our existing formalizations of Markov decision
processes (MDP) and timed automata (TA) and combines them modularly.
We prove the fundamental result for probabilistic timed automata: the
region construction that is known from timed automata carries over to
the probabilistic setting. In particular, this allows us to prove that
minimum and maximum reachability probabilities can be computed via a
reduction to MDP model checking, including the case where one wants to
disregard unrealizable behavior. Further information can be found in
our ITP paper [2].</description>
    </item>
    <item>
       <title>Irrational Rapidly Convergent Series</title>
              <link>https://www.isa-afp.org/entries/Irrationality_J_Hancl.html</link>
       <guid>https://www.isa-afp.org/entries/Irrationality_J_Hancl.html</guid>
       <dc:creator> Angeliki Koutsoukou-Argyraki, Wenda Li       </dc:creator>
       <pubDate>23 May 2018 00:00:00 +0000</pubDate>
       <description>
We formalize with Isabelle/HOL a proof of a theorem by J. Hancl asserting the
irrationality of the sum of a series consisting of rational numbers, built up
by sequences that fulfill certain properties. Even though the criterion is a
number theoretic result, the proof makes use only of analytical arguments. We
also formalize a corollary of the theorem for a specific series fulfilling the
assumptions of the theorem.</description>
    </item>
    <item>
       <title>Axiom Systems for Category Theory in Free Logic</title>
              <link>https://www.isa-afp.org/entries/AxiomaticCategoryTheory.html</link>
       <guid>https://www.isa-afp.org/entries/AxiomaticCategoryTheory.html</guid>
       <dc:creator> Christoph Benzmüller, Dana Scott       </dc:creator>
       <pubDate>23 May 2018 00:00:00 +0000</pubDate>
       <description>
This document provides a concise overview on the core results of our
previous work on the exploration of axioms systems for category
theory. Extending the previous studies
(http://arxiv.org/abs/1609.01493) we include one further axiomatic
theory in our experiments. This additional theory has been suggested
by Mac Lane in 1948. We show that the axioms proposed by Mac Lane are
equivalent to the ones we studied before, which includes an axioms set
suggested by Scott in the 1970s and another axioms set proposed by
Freyd and Scedrov in 1990, which we slightly modified to remedy a
minor technical issue.</description>
    </item>
    <item>
       <title>Monadification, Memoization and Dynamic Programming</title>
              <link>https://www.isa-afp.org/entries/Monad_Memo_DP.html</link>
       <guid>https://www.isa-afp.org/entries/Monad_Memo_DP.html</guid>
       <dc:creator> Simon Wimmer, Shuwei Hu, Tobias Nipkow       </dc:creator>
       <pubDate>22 May 2018 00:00:00 +0000</pubDate>
       <description>
We present a lightweight framework for the automatic verified
(functional or imperative) memoization of recursive functions. Our
tool can turn a pure Isabelle/HOL function definition into a
monadified version in a state monad or the Imperative HOL heap monad,
and prove a correspondence theorem. We provide a variety of memory
implementations for the two types of monads. A number of simple
techniques allow us to achieve bottom-up computation and
space-efficient memoization. The framework’s utility is demonstrated
on a number of representative dynamic programming problems. A detailed
description of our work can be found in the accompanying paper [2].</description>
    </item>
    <item>
       <title>OpSets: Sequential Specifications for Replicated Datatypes</title>
              <link>https://www.isa-afp.org/entries/OpSets.html</link>
       <guid>https://www.isa-afp.org/entries/OpSets.html</guid>
       <dc:creator> Martin Kleppmann, Victor B. F. Gomes, Dominic P. Mulligan, Alastair R. Beresford       </dc:creator>
       <pubDate>10 May 2018 00:00:00 +0000</pubDate>
       <description>
We introduce OpSets, an executable framework for specifying and
reasoning about the semantics of replicated datatypes that provide
eventual consistency in a distributed system, and for mechanically
verifying algorithms that implement these datatypes. Our approach is
simple but expressive, allowing us to succinctly specify a variety of
abstract datatypes, including maps, sets, lists, text, graphs, trees,
and registers. Our datatypes are also composable, enabling the
construction of complex data structures. To demonstrate the utility of
OpSets for analysing replication algorithms, we highlight an important
correctness property for collaborative text editing that has
traditionally been overlooked; algorithms that do not satisfy this
property can exhibit awkward interleaving of text. We use OpSets to
specify this correctness property and prove that although one existing
replication algorithm satisfies this property, several other published
algorithms do not.</description>
    </item>
    <item>
       <title>An Isabelle/HOL Formalization of the Modular Assembly Kit for Security Properties</title>
              <link>https://www.isa-afp.org/entries/Modular_Assembly_Kit_Security.html</link>
       <guid>https://www.isa-afp.org/entries/Modular_Assembly_Kit_Security.html</guid>
       <dc:creator> Oliver Bračevac, Richard Gay, Sylvia Grewe, Heiko Mantel, Henning Sudbrock, Markus Tasch       </dc:creator>
       <pubDate>07 May 2018 00:00:00 +0000</pubDate>
       <description>
The &#34;Modular Assembly Kit for Security Properties&#34; (MAKS) is
a framework for both the definition and verification of possibilistic
information-flow security properties at the specification-level. MAKS
supports the uniform representation of a wide range of possibilistic
information-flow properties and provides support for the verification
of such properties via unwinding results and compositionality results.
We provide a formalization of this framework in Isabelle/HOL.</description>
    </item>
    <item>
       <title>WebAssembly</title>
              <link>https://www.isa-afp.org/entries/WebAssembly.html</link>
       <guid>https://www.isa-afp.org/entries/WebAssembly.html</guid>
       <dc:creator> Conrad Watt       </dc:creator>
       <pubDate>29 Apr 2018 00:00:00 +0000</pubDate>
       <description>
This is a mechanised specification of the WebAssembly language, drawn
mainly from the previously published paper formalisation of Haas et
al. Also included is a full proof of soundness of the type system,
together with a verified type checker and interpreter. We include only
a partial procedure for the extraction of the type checker and
interpreter here. For more details, please see our paper in CPP 2018.</description>
    </item>
    <item>
       <title>VerifyThis 2018 - Polished Isabelle Solutions</title>
              <link>https://www.isa-afp.org/entries/VerifyThis2018.html</link>
       <guid>https://www.isa-afp.org/entries/VerifyThis2018.html</guid>
       <dc:creator> Peter Lammich, Simon Wimmer       </dc:creator>
       <pubDate>27 Apr 2018 00:00:00 +0000</pubDate>
       <description>
&lt;a
href=&#34;http://www.pm.inf.ethz.ch/research/verifythis.html&#34;&gt;VerifyThis
2018&lt;/a&gt; was a program verification competition associated with
ETAPS 2018. It was the 7th event in the VerifyThis competition series.
In this entry, we present polished and completed versions of our
solutions that we created during the competition.</description>
    </item>
  </channel>
</rss>
